if(operations.size() == 1){
	return calculateMayor();
}else{
	opA = operation.poll();
	while((operations.size() + 1) >= 2){
		opB = operation.poll();
		if(opA.compare(opB) > -1){ //Mayor o igual
			if(pilaOp.isEmpty()){
				numA = calculateMajor();
			}else{
				index = operations.indexOf(opA);
				for(int i = index; i <= (index + opA.getOperandsRequired); i++){
					opA.pushOperand(numbers.get(i));
				}
				total.setValue(opA.getValue());
				numA = calculatePendingOperations(operationsStack, numbersStack);
			}
			numbers.pushTop(numA);
		}else{
			operationsStack.push(opA);
			numbersStack.push(numbers.poll());
		}
		opA = opB;
	}
	this.total.setValue(BigDecimal.valueOf(numbers.poll()));
	return this.total;
}